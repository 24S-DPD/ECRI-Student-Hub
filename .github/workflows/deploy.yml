name: Deploy to Azure Container Registry

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Log in to Azure Container Registry
        run: |
          echo ${{ secrets.ACR_PASSWORD }} | docker login ecristudenthubregistry.azurecr.io -u ecristudenthubregistry --password-stdin

      - name: Build frontend Docker image
        working-directory: ./frontend
        run: |
          docker build -t ecristudenthubregistry.azurecr.io/frontend:latest .
          docker push ecristudenthubregistry.azurecr.io/frontend:latest

      - name: Build backend Docker image
        working-directory: ./backend
        run: |
          docker build -t ecristudenthubregistry.azurecr.io/backend:latest .
          docker push ecristudenthubregistry.azurecr.io/backend:latest

      - name: Create .env file
        run: |
          echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> .env
          echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env
          echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" >> .env
          echo "PGADMIN_DEFAULT_EMAIL=${{ secrets.PGADMIN_DEFAULT_EMAIL }}" >> .env
          echo "PGADMIN_DEFAULT_PASSWORD=${{ secrets.PGADMIN_DEFAULT_PASSWORD }}" >> .env
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> .env

      - name: Show .env file content (for debugging purposes, remove this step in production)
        run: cat .env

      - name: Update Docker Compose file
        run: |
          sed -i "s|image:.*backend.*|image: ecristudenthubregistry.azurecr.io/backend:latest|g" docker-compose.yml
          sed -i "s|image:.*frontend.*|image: ecristudenthubregistry.azurecr.io/frontend:latest|g" docker-compose.yml

      - name: Deploy Docker Compose
        run: |
          docker-compose --env-file .env up -d

      - name: Display backend logs if unhealthy
        if: failure()
        run: |
          docker-compose logs backend
